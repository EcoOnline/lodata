name: Tests

on:
  push:
    branches:
      - "**"
  pull_request:
    types: [ ready_for_review, synchronize, opened ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - php: 81
            laravel: 9
            database: sqlite
          - php: 81
            laravel: 9
            database: sqlsrv
          - php: 81
            laravel: 9
            database: postgres
          - php: 81
            laravel: 9
            database: mysql
          - php: 80
            laravel: 9
            database: sqlite
          - php: 81
            laravel: 8
            database: sqlite
          - php: 80
            laravel: 8
            database: sqlite
          - php: 74
            laravel: 8
            database: sqlite
          - php: 73
            laravel: 8
            database: sqlite
    name: PHP ${{ matrix.php }} / Laravel ${{ matrix.laravel }} / ${{matrix.database}}
    env:
      PHP: ${{ matrix.php }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        env:
          PACKAGE: "laravel/framework:^${{ matrix.laravel }}.0"
        run: |
          docker compose up require
          docker compose up update

      - name: Run tests
        run: docker compose up --exit-code-from ${{ matrix.database }} ${{ matrix.database }}

      - name: Shutdown
        run: docker compose down

  analysis:
    runs-on: ubuntu-latest
    name: Analysis
    env:
      PHP: 81
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update
        run: docker compose up update

      - name: Static analysis
        run: docker compose up --exit-code-from analyse analyse

      - name: Test Coverage
        run: GIT_COMMITTED_AT=`git log -1 --pretty=format:%ct` docker compose up --exit-code-from coverage coverage