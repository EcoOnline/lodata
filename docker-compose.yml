services:
  mysql_db:
    image: "mysql:latest"
    restart: always
    expose:
      - 3306
    ports:
      - 3306:3306
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_ROOT_PASSWORD: "my-secret-pw"
      MYSQL_DATABASE: "testing"
    command: "mysqld --max-connections=8000"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 --password=$$MYSQL_ROOT_PASSWORD
      timeout: 60s
      retries: 20
      interval: 1s

  postgres_db:
    image: "postgres:latest"
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    cap_add:
      - SYS_NICE
    environment:
      POSTGRES_PASSWORD: "my-secret-pw"
    command: "postgres -c shared_buffers=256MB -c max_connections=2000"
    healthcheck:
      test: pg_isready -q -d postgres -U postgres
      timeout: 60s
      retries: 10
      interval: 1s

  sqlsrv_db:
    image: "mcr.microsoft.com/mssql/server"
    restart: always
    expose:
      - 1433
    ports:
      - 1433:1433
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q "SELECT 1" || exit 1
      timeout: 60s
      retries: 10
      interval: 1s

  mysql:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    environment:
      - CREATE_SNAPSHOTS=false
      - DATABASE_URL=mysql://root:my-secret-pw@mysql_db:3306/testing
    depends_on:
      mysql_db:
        condition: service_healthy
    entrypoint: "composer test"

  postgres:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    environment:
      - CREATE_SNAPSHOTS=false
      - DATABASE_URL=pgsql://postgres:my-secret-pw@postgres_db:5432/postgres?charset=utf8
    depends_on:
      postgres_db:
        condition: service_healthy
    entrypoint: "composer test"

  sqlsrv:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    environment:
      - CREATE_SNAPSHOTS=false
      - DATABASE_URL=sqlsrv://sa:Your_password123@sqlsrv_db:1433/msdb
    depends_on:
      sqlsrv_db:
        condition: service_healthy
    entrypoint: "composer test"

  sqlite:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    environment:
      - CREATE_SNAPSHOTS=false
    entrypoint: "composer test"

  require:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    environment:
      - PACKAGE:${PACKAGE}
    entrypoint: "composer require --no-interaction --no-update $PACKAGE"

  update:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    entrypoint: "composer update"

  analyse:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    entrypoint: "composer analyse"

  coverage:
    image: ghcr.io/flat3/lodata:$PHP
    volumes:
      - .:/lodata
    environment:
      - CC_TEST_REPORTER_ID=1be98f680ca97065e8a18ad2df18e67210033bb0708b5b70e4d128b035b0cb45
      - COMPOSER_PROCESS_TIMEOUT=10000
      - GITHUB_SHA=${GITHUB_SHA}
      - GITHUB_REF_NAME=${GITHUB_REF_NAME}
      - GIT_COMMITTED_AT=${GIT_COMMITTED_AT}
    entrypoint: "/bin/sh -c 'composer coverage && cc-reporter after-build -t clover --exit-code $$?'"
